{
 "Resources": {
  "ALBApplicationsWebCAB76CA9": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Name": "ALB-Applications-Web",
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ALBApplicationsWebSecurityGroupDEDFEC71",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPublicApplicationsWebALBSubnet1Subnet90EAC081B71B102D"
     },
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPublicApplicationsWebALBSubnet2Subnet55DB0D88B107EC0F"
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-Web/Resource"
   }
  },
  "ALBApplicationsWebSecurityGroupDEDFEC71": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB cdkec2infinityapplicationsALBApplicationsWebF1184FE0",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-Web/SecurityGroup/Resource"
   }
  },
  "ALBApplicationsWebSecurityGrouptocdkec2infinityapplicationsASGApplicationsWebInstanceSecurityGroup566A4388806673245B": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "ALBApplicationsWebSecurityGroupDEDFEC71",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "ALB access 80 port of EC2 in Autoscaling Group",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "ASGApplicationsWebInstanceSecurityGroup94520ECD",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-Web/SecurityGroup/to cdkec2infinityapplicationsASGApplicationsWebInstanceSecurityGroup566A4388:80"
   }
  },
  "ALBApplicationsWebALBApplicationsWeb8053C95EDA": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "ALBApplicationsWebALBApplicationsWeb80TGApplicationsWebGroup40D0C4D7"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "ALBApplicationsWebCAB76CA9"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-Web/ALB-Applications-Web-80/Resource"
   }
  },
  "ALBApplicationsWebALBApplicationsWeb80TGApplicationsWebGroup40D0C4D7": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "instance",
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-Web/ALB-Applications-Web-80/TG-Applications-WebGroup/Resource"
   }
  },
  "ASGApplicationsWebInstanceSecurityGroup94520ECD": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "cdk-ec2-infinity-applications/ASG-Applications-Web/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     },
     {
      "Key": "Name",
      "Value": "cdk-ec2-infinity-applications/ASG-Applications-Web"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-Web/InstanceSecurityGroup/Resource"
   }
  },
  "ASGApplicationsWebInstanceSecurityGroupfromcdkec2infinityapplicationsALBApplicationsWebSecurityGroup1A9A753C80CBD623A1": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "ALB access 80 port of EC2 in Autoscaling Group",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "ASGApplicationsWebInstanceSecurityGroup94520ECD",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ALBApplicationsWebSecurityGroupDEDFEC71",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-Web/InstanceSecurityGroup/from cdkec2infinityapplicationsALBApplicationsWebSecurityGroup1A9A753C:80"
   }
  },
  "ASGApplicationsWebInstanceRoleB59BB814": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     },
     {
      "Key": "Name",
      "Value": "cdk-ec2-infinity-applications/ASG-Applications-Web"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-Web/InstanceRole/Resource"
   }
  },
  "ASGApplicationsWebInstanceProfileFC17BFF1": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "ASGApplicationsWebInstanceRoleB59BB814"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-Web/InstanceProfile"
   }
  },
  "ASGApplicationsWebLaunchConfig1A4FA0EF": {
   "Type": "AWS::AutoScaling::LaunchConfiguration",
   "Properties": {
    "ImageId": {
     "Fn::FindInMap": [
      "ASGApplicationsWebAmiMap360FDF57",
      {
       "Ref": "AWS::Region"
      },
      "ami"
     ]
    },
    "InstanceType": "t3.micro",
    "IamInstanceProfile": {
     "Ref": "ASGApplicationsWebInstanceProfileFC17BFF1"
    },
    "KeyName": "id_rsa",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ASGApplicationsWebInstanceSecurityGroup94520ECD",
       "GroupId"
      ]
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\nsudo yum update -y\nsudo yum -y install httpd php\nsudo chkconfig httpd on\nsudo service httpd start"
    }
   },
   "DependsOn": [
    "ASGApplicationsWebInstanceRoleB59BB814"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-Web/LaunchConfig"
   }
  },
  "ASGApplicationsWebASG60CE2D77": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "MaxSize": "2",
    "MinSize": "2",
    "DesiredCapacity": "2",
    "LaunchConfigurationName": {
     "Ref": "ASGApplicationsWebLaunchConfig1A4FA0EF"
    },
    "Tags": [
     {
      "Key": "Env",
      "PropagateAtLaunch": true,
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "PropagateAtLaunch": true,
      "Value": "Applications"
     },
     {
      "Key": "Name",
      "PropagateAtLaunch": true,
      "Value": "cdk-ec2-infinity-applications/ASG-Applications-Web"
     }
    ],
    "TargetGroupARNs": [
     {
      "Ref": "ALBApplicationsWebALBApplicationsWeb80TGApplicationsWebGroup40D0C4D7"
     }
    ],
    "VPCZoneIdentifier": [
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsWebASGSubnet1Subnet9C8E21FD20448DC3"
     },
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsWebASGSubnet2Subnet5F112051138759DE"
     }
    ]
   },
   "UpdatePolicy": {
    "AutoScalingScheduledAction": {
     "IgnoreUnmodifiedGroupSizeProperties": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-Web/ASG"
   }
  },
  "ALBApplicationsAPI22783E44": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Name": "ALB-Applications-API",
    "Scheme": "internal",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ALBApplicationsAPISecurityGroup4C92AEE9",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsAPIALBSubnet1Subnet02047DA691DD3EC1"
     },
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsAPIALBSubnet2Subnet831EDCF61CEF3C41"
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-API/Resource"
   }
  },
  "ALBApplicationsAPISecurityGroup4C92AEE9": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB cdkec2infinityapplicationsALBApplicationsAPI683175E3",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Internet access ALB 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-API/SecurityGroup/Resource"
   }
  },
  "ALBApplicationsAPISecurityGrouptocdkec2infinityapplicationsASGApplicationsAPIInstanceSecurityGroup1E6A1BBA80C46E582F": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "ALBApplicationsAPISecurityGroup4C92AEE9",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "ALB API access 80 port of EC2 in Autoscaling Group",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "ASGApplicationsAPIInstanceSecurityGroup7E1B9C5F",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-API/SecurityGroup/to cdkec2infinityapplicationsASGApplicationsAPIInstanceSecurityGroup1E6A1BBA:80"
   }
  },
  "ALBApplicationsAPIALBApplicationsAPI808CDCED01": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "ALBApplicationsAPIALBApplicationsAPI80TGApplicationsAPIGroupD10921C3"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "ALBApplicationsAPI22783E44"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-API/ALB-Applications-API-80/Resource"
   }
  },
  "ALBApplicationsAPIALBApplicationsAPI80TGApplicationsAPIGroupD10921C3": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "instance",
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-API/ALB-Applications-API-80/TG-Applications-APIGroup/Resource"
   }
  },
  "ASGApplicationsAPIInstanceSecurityGroup7E1B9C5F": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "cdk-ec2-infinity-applications/ASG-Applications-API/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     },
     {
      "Key": "Name",
      "Value": "cdk-ec2-infinity-applications/ASG-Applications-API"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-API/InstanceSecurityGroup/Resource"
   }
  },
  "ASGApplicationsAPIInstanceSecurityGroupfromcdkec2infinityapplicationsALBApplicationsAPISecurityGroupC960C2C080B53694A9": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "ALB API access 80 port of EC2 in Autoscaling Group",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "ASGApplicationsAPIInstanceSecurityGroup7E1B9C5F",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ALBApplicationsAPISecurityGroup4C92AEE9",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-API/InstanceSecurityGroup/from cdkec2infinityapplicationsALBApplicationsAPISecurityGroupC960C2C0:80"
   }
  },
  "ASGApplicationsAPIInstanceRole324280BF": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     },
     {
      "Key": "Name",
      "Value": "cdk-ec2-infinity-applications/ASG-Applications-API"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-API/InstanceRole/Resource"
   }
  },
  "ASGApplicationsAPIInstanceProfile2758142C": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "ASGApplicationsAPIInstanceRole324280BF"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-API/InstanceProfile"
   }
  },
  "ASGApplicationsAPILaunchConfigC74440A9": {
   "Type": "AWS::AutoScaling::LaunchConfiguration",
   "Properties": {
    "ImageId": {
     "Fn::FindInMap": [
      "ASGApplicationsAPIAmiMap353AF052",
      {
       "Ref": "AWS::Region"
      },
      "ami"
     ]
    },
    "InstanceType": "t3.micro",
    "IamInstanceProfile": {
     "Ref": "ASGApplicationsAPIInstanceProfile2758142C"
    },
    "KeyName": "id_rsa",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ASGApplicationsAPIInstanceSecurityGroup7E1B9C5F",
       "GroupId"
      ]
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\nsudo yum update -y\nsudo yum -y install httpd php\nsudo chkconfig httpd on\nsudo service httpd start"
    }
   },
   "DependsOn": [
    "ASGApplicationsAPIInstanceRole324280BF"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-API/LaunchConfig"
   }
  },
  "ASGApplicationsAPIASG739F73E1": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "MaxSize": "2",
    "MinSize": "2",
    "DesiredCapacity": "2",
    "LaunchConfigurationName": {
     "Ref": "ASGApplicationsAPILaunchConfigC74440A9"
    },
    "Tags": [
     {
      "Key": "Env",
      "PropagateAtLaunch": true,
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "PropagateAtLaunch": true,
      "Value": "Applications"
     },
     {
      "Key": "Name",
      "PropagateAtLaunch": true,
      "Value": "cdk-ec2-infinity-applications/ASG-Applications-API"
     }
    ],
    "TargetGroupARNs": [
     {
      "Ref": "ALBApplicationsAPIALBApplicationsAPI80TGApplicationsAPIGroupD10921C3"
     }
    ],
    "VPCZoneIdentifier": [
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsAPIASGSubnet1Subnet7C83FB1A3EE7D24B"
     },
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsAPIASGSubnet2SubnetAACA46325EBC8681"
     }
    ]
   },
   "UpdatePolicy": {
    "AutoScalingScheduledAction": {
     "IgnoreUnmodifiedGroupSizeProperties": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-API/ASG"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31RTUsDMRD9Lb1nI60gXrWIFCqWXe8yzc5up02TkEyUsuS/m2xtWRU8zbyPzMskC3l/K+cz+AyVag+Vpq0cGgZ1EJl6H1BDYFLaQrsFDUaR6T8WcnhwTpMCJmvWWXscNfRi2f3EUx8FRvPtufQT/Q18j/zsbXTFMoFJoMqZDaroiU9Xy//EU+8xhD/0yox8EhDZBgU6b5T3yaA5g+u0NUSjdktrOuqjH+9Y6N/WJAiOcqitxiJf6soELm+w8bYjjSmJGoONXo3qCziXB5T2NbKLPB6dGHJsSyUyic2Jd9bc5G+ay7vZPhBVPhqmI8r6XL8AE8PgzcUBAAA="
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "ASGApplicationsWebAmiMap360FDF57": {
   "af-south-1": {
    "ami": "ami-09e042233e6cbe5c5"
   }
  },
  "ASGApplicationsAPIAmiMap353AF052": {
   "af-south-1": {
    "ami": "ami-09e042233e6cbe5c5"
   }
  }
 },
 "Outputs": {
  "Output": {
   "Value": {
    "Fn::GetAtt": [
     "ALBApplicationsWebCAB76CA9",
     "DNSName"
    ]
   }
  },
  "ExportsOutputFnGetAttASGApplicationsWebInstanceSecurityGroup94520ECDGroupId56E0900A": {
   "Value": {
    "Fn::GetAtt": [
     "ASGApplicationsWebInstanceSecurityGroup94520ECD",
     "GroupId"
    ]
   },
   "Export": {
    "Name": "cdk-ec2-infinity-applications:ExportsOutputFnGetAttASGApplicationsWebInstanceSecurityGroup94520ECDGroupId56E0900A"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}