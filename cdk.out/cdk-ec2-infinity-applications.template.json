{
 "Resources": {
  "ALBApplicationsWebCAB76CA9": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Name": "ALB-Applications-Web",
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ALBApplicationsWebSecurityGroupDEDFEC71",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPublicApplicationsWebALBSubnet1Subnet90EAC081B71B102D"
     },
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPublicApplicationsWebALBSubnet2Subnet55DB0D88B107EC0F"
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-Web/Resource"
   }
  },
  "ALBApplicationsWebSecurityGroupDEDFEC71": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB cdkec2infinityapplicationsALBApplicationsWebF1184FE0",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-Web/SecurityGroup/Resource"
   }
  },
  "ALBApplicationsWebSecurityGrouptocdkec2infinityapplicationsASGApplicationsWebInstanceSecurityGroup566A43885002771D6165": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "ALB access 5002 port of EC2 in Autoscaling Group",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "ASGApplicationsWebInstanceSecurityGroup94520ECD",
      "GroupId"
     ]
    },
    "FromPort": 5002,
    "GroupId": {
     "Fn::GetAtt": [
      "ALBApplicationsWebSecurityGroupDEDFEC71",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 5002
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-Web/SecurityGroup/to cdkec2infinityapplicationsASGApplicationsWebInstanceSecurityGroup566A4388:5002"
   }
  },
  "ALBApplicationsWebALBApplicationsWeb8053C95EDA": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "ALBApplicationsWebALBApplicationsWeb80TGApplicationsWeb5002Group1A1F5927"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "ALBApplicationsWebCAB76CA9"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-Web/ALB-Applications-Web-80/Resource"
   }
  },
  "ALBApplicationsWebALBApplicationsWeb80TGApplicationsWeb5002Group1A1F5927": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 5002,
    "Protocol": "HTTP",
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "instance",
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-Web/ALB-Applications-Web-80/TG-Applications-Web-5002Group/Resource"
   }
  },
  "Role1ABCC5F0": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "ManagedPolicyArns": [
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/SecretsManagerReadWrite"
       ]
      ]
     },
     {
      "Fn::Join": [
       "",
       [
        "arn:",
        {
         "Ref": "AWS::Partition"
        },
        ":iam::aws:policy/AmazonSSMManagedInstanceCore"
       ]
      ]
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/Role/Resource"
   }
  },
  "ASGApplicationsWebInstanceSecurityGroup94520ECD": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "cdk-ec2-infinity-applications/ASG-Applications-Web/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     },
     {
      "Key": "Name",
      "Value": "cdk-ec2-infinity-applications/ASG-Applications-Web"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-Web/InstanceSecurityGroup/Resource"
   }
  },
  "ASGApplicationsWebInstanceSecurityGroupfromcdkec2infinityapplicationsALBApplicationsWebSecurityGroup1A9A753C50023F47116E": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "ALB access 5002 port of EC2 in Autoscaling Group",
    "FromPort": 5002,
    "GroupId": {
     "Fn::GetAtt": [
      "ASGApplicationsWebInstanceSecurityGroup94520ECD",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ALBApplicationsWebSecurityGroupDEDFEC71",
      "GroupId"
     ]
    },
    "ToPort": 5002
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-Web/InstanceSecurityGroup/from cdkec2infinityapplicationsALBApplicationsWebSecurityGroup1A9A753C:5002"
   }
  },
  "ASGApplicationsWebInstanceProfileFC17BFF1": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "Role1ABCC5F0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-Web/InstanceProfile"
   }
  },
  "ASGApplicationsWebLaunchConfig1A4FA0EF": {
   "Type": "AWS::AutoScaling::LaunchConfiguration",
   "Properties": {
    "IamInstanceProfile": {
     "Ref": "ASGApplicationsWebInstanceProfileFC17BFF1"
    },
    "ImageId": {
     "Fn::FindInMap": [
      "ASGApplicationsWebAmiMap360FDF57",
      {
       "Ref": "AWS::Region"
      },
      "ami"
     ]
    },
    "InstanceType": "t3.micro",
    "KeyName": "id_rsa",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ASGApplicationsWebInstanceSecurityGroup94520ECD",
       "GroupId"
      ]
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\nsudo yum update -y\nsudo yum -y install httpd php postgresql15.x86_64 git pip\ncd /home/ec2-user/\ngit clone https://github.com/jojo786/aws-cdk-vpc-ec2-alb-asg.git\ncd aws-cdk-vpc-ec2-alb-asg/\ngit pull\npip install Flask psycopg2-binary requests boto3 gunicorn\ncd /home/ec2-user/aws-cdk-vpc-ec2-alb-asg/app/applications/api\ngunicorn -w 1 -b 0.0.0.0:5000 'api_flask:app'\n#flask --app api_flask run --debug --host=0.0.0.0\ncd /home/ec2-user/aws-cdk-vpc-ec2-alb-asg/app/applications/web\ngunicorn -w 1 -b 0.0.0.0:5001 'web_flask:app'\n#flask --app web_flask run --debug --host=0.0.0.0"
    }
   },
   "DependsOn": [
    "Role1ABCC5F0"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-Web/LaunchConfig"
   }
  },
  "ASGApplicationsWebASG60CE2D77": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "LaunchConfigurationName": {
     "Ref": "ASGApplicationsWebLaunchConfig1A4FA0EF"
    },
    "MaxSize": "3",
    "MinSize": "1",
    "Tags": [
     {
      "Key": "Env",
      "PropagateAtLaunch": true,
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "PropagateAtLaunch": true,
      "Value": "Applications"
     },
     {
      "Key": "Name",
      "PropagateAtLaunch": true,
      "Value": "cdk-ec2-infinity-applications/ASG-Applications-Web"
     }
    ],
    "TargetGroupARNs": [
     {
      "Ref": "ALBApplicationsWebALBApplicationsWeb80TGApplicationsWeb5002Group1A1F5927"
     }
    ],
    "VPCZoneIdentifier": [
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsWebASGSubnet1Subnet9C8E21FD20448DC3"
     },
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsWebASGSubnet2Subnet5F112051138759DE"
     }
    ]
   },
   "UpdatePolicy": {
    "AutoScalingScheduledAction": {
     "IgnoreUnmodifiedGroupSizeProperties": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-Web/ASG"
   }
  },
  "ASGApplicationsWebScalingPolicyCPUScalingApplicationsWebEC722C86": {
   "Type": "AWS::AutoScaling::ScalingPolicy",
   "Properties": {
    "AutoScalingGroupName": {
     "Ref": "ASGApplicationsWebASG60CE2D77"
    },
    "Cooldown": "60",
    "EstimatedInstanceWarmup": 60,
    "PolicyType": "TargetTrackingScaling",
    "TargetTrackingConfiguration": {
     "DisableScaleIn": false,
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ASGAverageCPUUtilization"
     },
     "TargetValue": 25
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-Web/ScalingPolicyCPUScaling-Applications-Web/Resource"
   }
  },
  "ALBApplicationsAPI22783E44": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Name": "ALB-Applications-API",
    "Scheme": "internal",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ALBApplicationsAPISecurityGroup4C92AEE9",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsAPIALBSubnet1Subnet02047DA691DD3EC1"
     },
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsAPIALBSubnet2Subnet831EDCF61CEF3C41"
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-API/Resource"
   }
  },
  "ALBApplicationsAPISecurityGroup4C92AEE9": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB cdkec2infinityapplicationsALBApplicationsAPI683175E3",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow from anyone on port 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-API/SecurityGroup/Resource"
   }
  },
  "ALBApplicationsAPISecurityGroupfromcdkec2infinityapplicationsASGApplicationsWebInstanceSecurityGroup566A438880EC416FFD": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "Allow Web ASG to connect to ALB API on port 80",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "ALBApplicationsAPISecurityGroup4C92AEE9",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ASGApplicationsWebInstanceSecurityGroup94520ECD",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-API/SecurityGroup/from cdkec2infinityapplicationsASGApplicationsWebInstanceSecurityGroup566A4388:80"
   }
  },
  "ALBApplicationsAPISecurityGrouptocdkec2infinityapplicationsASGApplicationsAPIInstanceSecurityGroup1E6A1BBA5000CA9923C8": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "Description": "ALB API access to port 5000 of EC2 in Autoscaling Group",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "ASGApplicationsAPIInstanceSecurityGroup7E1B9C5F",
      "GroupId"
     ]
    },
    "FromPort": 5000,
    "GroupId": {
     "Fn::GetAtt": [
      "ALBApplicationsAPISecurityGroup4C92AEE9",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "ToPort": 5000
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-API/SecurityGroup/to cdkec2infinityapplicationsASGApplicationsAPIInstanceSecurityGroup1E6A1BBA:5000"
   }
  },
  "ALBApplicationsAPIALBApplicationsAPI808CDCED01": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "ALBApplicationsAPIALBApplicationsAPI80TGApplicationsAPIGroupD10921C3"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "ALBApplicationsAPI22783E44"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-API/ALB-Applications-API-80/Resource"
   }
  },
  "ALBApplicationsAPIALBApplicationsAPI80TGApplicationsAPIGroupD10921C3": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 5000,
    "Protocol": "HTTP",
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "instance",
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications-API/ALB-Applications-API-80/TG-Applications-APIGroup/Resource"
   }
  },
  "ASGApplicationsAPIInstanceSecurityGroup7E1B9C5F": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "cdk-ec2-infinity-applications/ASG-Applications-API/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     },
     {
      "Key": "Name",
      "Value": "cdk-ec2-infinity-applications/ASG-Applications-API"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-API/InstanceSecurityGroup/Resource"
   }
  },
  "ASGApplicationsAPIInstanceSecurityGroupfromcdkec2infinityapplicationsALBApplicationsAPISecurityGroupC960C2C05000336E401F": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "Description": "ALB API access to port 5000 of EC2 in Autoscaling Group",
    "FromPort": 5000,
    "GroupId": {
     "Fn::GetAtt": [
      "ASGApplicationsAPIInstanceSecurityGroup7E1B9C5F",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ALBApplicationsAPISecurityGroup4C92AEE9",
      "GroupId"
     ]
    },
    "ToPort": 5000
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-API/InstanceSecurityGroup/from cdkec2infinityapplicationsALBApplicationsAPISecurityGroupC960C2C0:5000"
   }
  },
  "ASGApplicationsAPIInstanceProfile2758142C": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "Role1ABCC5F0"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-API/InstanceProfile"
   }
  },
  "ASGApplicationsAPILaunchConfigC74440A9": {
   "Type": "AWS::AutoScaling::LaunchConfiguration",
   "Properties": {
    "IamInstanceProfile": {
     "Ref": "ASGApplicationsAPIInstanceProfile2758142C"
    },
    "ImageId": {
     "Fn::FindInMap": [
      "ASGApplicationsAPIAmiMap353AF052",
      {
       "Ref": "AWS::Region"
      },
      "ami"
     ]
    },
    "InstanceType": "t3.micro",
    "KeyName": "id_rsa",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ASGApplicationsAPIInstanceSecurityGroup7E1B9C5F",
       "GroupId"
      ]
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\nsudo yum update -y\nsudo yum -y install httpd php postgresql15.x86_64 git pip\ncd /home/ec2-user/\ngit clone https://github.com/jojo786/aws-cdk-vpc-ec2-alb-asg.git\ncd aws-cdk-vpc-ec2-alb-asg/\ngit pull\npip install Flask psycopg2-binary requests boto3 gunicorn\ncd /home/ec2-user/aws-cdk-vpc-ec2-alb-asg/app/applications/api\ngunicorn -w 1 -b 0.0.0.0:5000 'api_flask:app'\n#flask --app api_flask run --debug --host=0.0.0.0\ncd /home/ec2-user/aws-cdk-vpc-ec2-alb-asg/app/applications/web\ngunicorn -w 1 -b 0.0.0.0:5001 'web_flask:app'\n#flask --app web_flask run --debug --host=0.0.0.0"
    }
   },
   "DependsOn": [
    "Role1ABCC5F0"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-API/LaunchConfig"
   }
  },
  "ASGApplicationsAPIASG739F73E1": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "LaunchConfigurationName": {
     "Ref": "ASGApplicationsAPILaunchConfigC74440A9"
    },
    "MaxSize": "3",
    "MinSize": "1",
    "Tags": [
     {
      "Key": "Env",
      "PropagateAtLaunch": true,
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "PropagateAtLaunch": true,
      "Value": "Applications"
     },
     {
      "Key": "Name",
      "PropagateAtLaunch": true,
      "Value": "cdk-ec2-infinity-applications/ASG-Applications-API"
     }
    ],
    "TargetGroupARNs": [
     {
      "Ref": "ALBApplicationsAPIALBApplicationsAPI80TGApplicationsAPIGroupD10921C3"
     }
    ],
    "VPCZoneIdentifier": [
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsAPIASGSubnet1Subnet7C83FB1A3EE7D24B"
     },
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsAPIASGSubnet2SubnetAACA46325EBC8681"
     }
    ]
   },
   "UpdatePolicy": {
    "AutoScalingScheduledAction": {
     "IgnoreUnmodifiedGroupSizeProperties": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-API/ASG"
   }
  },
  "ASGApplicationsAPIScalingPolicyCPUScalingApplicationsWeb945898E4": {
   "Type": "AWS::AutoScaling::ScalingPolicy",
   "Properties": {
    "AutoScalingGroupName": {
     "Ref": "ASGApplicationsAPIASG739F73E1"
    },
    "Cooldown": "60",
    "EstimatedInstanceWarmup": 60,
    "PolicyType": "TargetTrackingScaling",
    "TargetTrackingConfiguration": {
     "DisableScaleIn": false,
     "PredefinedMetricSpecification": {
      "PredefinedMetricType": "ASGAverageCPUUtilization"
     },
     "TargetValue": 25
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications-API/ScalingPolicyCPUScaling-Applications-Web/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31RQWrDMBB8S+6yitPSextKCaTU2LmXjaw4myiSkFYtxujvleUkuAR62t2ZgZmRlrwsn3i5gB9fiPZUKNzxoSEQJ5agr0Eq8IRCGWh3oEAL1N33kg8v1ioUQGj0JnGvmZOOrfZ/77kOPUl90Vz3Gb8F10l6dybYUTI7I5MieTZSBIfU3yT/A2+dk97fwWud8cgQznyojZKj5DrX2tOYvHJmj0pGBoGMF6BS79Q6Hc103Dw3ELQ4rIzeYxdcbjLCd9Kpz9alp03YhapMat/njHMgRlZLb4ITOdQHWJu4cf0MZAPlxDNBcm9xdI6s6ulg9MNj+lf+vDh6xMIFTXiWvJ7mL39Xar3zAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Mappings": {
  "ASGApplicationsWebAmiMap360FDF57": {
   "af-south-1": {
    "ami": "ami-0b5c950b6c292d998"
   }
  },
  "ASGApplicationsAPIAmiMap353AF052": {
   "af-south-1": {
    "ami": "ami-0b5c950b6c292d998"
   }
  }
 },
 "Outputs": {
  "Output": {
   "Value": {
    "Fn::GetAtt": [
     "ALBApplicationsWebCAB76CA9",
     "DNSName"
    ]
   }
  },
  "ExportsOutputFnGetAttASGApplicationsAPIInstanceSecurityGroup7E1B9C5FGroupId31267B26": {
   "Value": {
    "Fn::GetAtt": [
     "ASGApplicationsAPIInstanceSecurityGroup7E1B9C5F",
     "GroupId"
    ]
   },
   "Export": {
    "Name": "cdk-ec2-infinity-applications:ExportsOutputFnGetAttASGApplicationsAPIInstanceSecurityGroup7E1B9C5FGroupId31267B26"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "il-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}