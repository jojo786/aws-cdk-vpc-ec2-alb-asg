{
 "Resources": {
  "ALBApplications44D46886": {
   "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
   "Properties": {
    "LoadBalancerAttributes": [
     {
      "Key": "deletion_protection.enabled",
      "Value": "false"
     }
    ],
    "Name": "ALB-Applications",
    "Scheme": "internet-facing",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ALBApplicationsSecurityGroupB06FD7CB",
       "GroupId"
      ]
     }
    ],
    "Subnets": [
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPublicApplicationsSubnet1Subnet02D5F1968A3339AB"
     },
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPublicApplicationsSubnet2Subnet4546797C8E28D83E"
     }
    ],
    "Type": "application"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications/Resource"
   }
  },
  "ALBApplicationsSecurityGroupB06FD7CB": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "Automatically created Security Group for ELB cdkec2infinityapplicationsALBApplications3EB9593D",
    "SecurityGroupIngress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Internet access ALB 80",
      "FromPort": 80,
      "IpProtocol": "tcp",
      "ToPort": 80
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications/SecurityGroup/Resource"
   }
  },
  "ALBApplicationsSecurityGrouptocdkec2infinityapplicationsASGApplicationsInstanceSecurityGroup3B8FF635803A4C7FAE": {
   "Type": "AWS::EC2::SecurityGroupEgress",
   "Properties": {
    "GroupId": {
     "Fn::GetAtt": [
      "ALBApplicationsSecurityGroupB06FD7CB",
      "GroupId"
     ]
    },
    "IpProtocol": "tcp",
    "Description": "ALB access 80 port of EC2 in Autoscaling Group",
    "DestinationSecurityGroupId": {
     "Fn::GetAtt": [
      "ASGApplicationsInstanceSecurityGroup642FB9F6",
      "GroupId"
     ]
    },
    "FromPort": 80,
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications/SecurityGroup/to cdkec2infinityapplicationsASGApplicationsInstanceSecurityGroup3B8FF635:80"
   }
  },
  "ALBApplicationsALB8085785995": {
   "Type": "AWS::ElasticLoadBalancingV2::Listener",
   "Properties": {
    "DefaultActions": [
     {
      "TargetGroupArn": {
       "Ref": "ALBApplicationsALB80TGApplicationsGroup95437DC8"
      },
      "Type": "forward"
     }
    ],
    "LoadBalancerArn": {
     "Ref": "ALBApplications44D46886"
    },
    "Port": 80,
    "Protocol": "HTTP"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications/ALB80/Resource"
   }
  },
  "ALBApplicationsALB80TGApplicationsGroup95437DC8": {
   "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
   "Properties": {
    "Port": 80,
    "Protocol": "HTTP",
    "TargetGroupAttributes": [
     {
      "Key": "stickiness.enabled",
      "Value": "false"
     }
    ],
    "TargetType": "instance",
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ALB-Applications/ALB80/TG-ApplicationsGroup/Resource"
   }
  },
  "ASGApplicationsInstanceSecurityGroup642FB9F6": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "cdk-ec2-infinity-applications/ASG-Applications/InstanceSecurityGroup",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Name",
      "Value": "cdk-ec2-infinity-applications/ASG-Applications"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications/InstanceSecurityGroup/Resource"
   }
  },
  "ASGApplicationsInstanceSecurityGroupfromcdkec2infinityapplicationsALBApplicationsSecurityGroupC67FDE33804D64DA4D": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "ALB access 80 port of EC2 in Autoscaling Group",
    "FromPort": 80,
    "GroupId": {
     "Fn::GetAtt": [
      "ASGApplicationsInstanceSecurityGroup642FB9F6",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::GetAtt": [
      "ALBApplicationsSecurityGroupB06FD7CB",
      "GroupId"
     ]
    },
    "ToPort": 80
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications/InstanceSecurityGroup/from cdkec2infinityapplicationsALBApplicationsSecurityGroupC67FDE33:80"
   }
  },
  "ASGApplicationsInstanceRole06EABDAA": {
   "Type": "AWS::IAM::Role",
   "Properties": {
    "AssumeRolePolicyDocument": {
     "Statement": [
      {
       "Action": "sts:AssumeRole",
       "Effect": "Allow",
       "Principal": {
        "Service": "ec2.amazonaws.com"
       }
      }
     ],
     "Version": "2012-10-17"
    },
    "Tags": [
     {
      "Key": "Name",
      "Value": "cdk-ec2-infinity-applications/ASG-Applications"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications/InstanceRole/Resource"
   }
  },
  "ASGApplicationsInstanceProfile6B304552": {
   "Type": "AWS::IAM::InstanceProfile",
   "Properties": {
    "Roles": [
     {
      "Ref": "ASGApplicationsInstanceRole06EABDAA"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications/InstanceProfile"
   }
  },
  "ASGApplicationsLaunchConfigF30F2F1E": {
   "Type": "AWS::AutoScaling::LaunchConfiguration",
   "Properties": {
    "ImageId": {
     "Ref": "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter"
    },
    "InstanceType": "t3.micro",
    "IamInstanceProfile": {
     "Ref": "ASGApplicationsInstanceProfile6B304552"
    },
    "KeyName": "id_rsa",
    "SecurityGroups": [
     {
      "Fn::GetAtt": [
       "ASGApplicationsInstanceSecurityGroup642FB9F6",
       "GroupId"
      ]
     }
    ],
    "UserData": {
     "Fn::Base64": "#!/bin/bash\nsudo yum update -y\nsudo yum -y install httpd php\nsudo chkconfig httpd on\nsudo service httpd start"
    }
   },
   "DependsOn": [
    "ASGApplicationsInstanceRole06EABDAA"
   ],
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications/LaunchConfig"
   }
  },
  "ASGApplicationsASG9699D8C3": {
   "Type": "AWS::AutoScaling::AutoScalingGroup",
   "Properties": {
    "MaxSize": "2",
    "MinSize": "2",
    "DesiredCapacity": "2",
    "LaunchConfigurationName": {
     "Ref": "ASGApplicationsLaunchConfigF30F2F1E"
    },
    "Tags": [
     {
      "Key": "Name",
      "PropagateAtLaunch": true,
      "Value": "cdk-ec2-infinity-applications/ASG-Applications"
     }
    ],
    "TargetGroupARNs": [
     {
      "Ref": "ALBApplicationsALB80TGApplicationsGroup95437DC8"
     }
    ],
    "VPCZoneIdentifier": [
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsSubnet1Subnet7B4BD01397A6BDAB"
     },
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateApplicationsSubnet2Subnet93CF301864658C83"
     }
    ]
   },
   "UpdatePolicy": {
    "AutoScalingScheduledAction": {
     "IgnoreUnmodifiedGroupSizeProperties": true
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/ASG-Applications/ASG"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31RTU/DMAz9LbunQdsuXGFCaNIkqpY78lK3M0uTKnFAU5X/TpqyqYDEyXkf8YudjbzfyvUKPn2hmnOh6SjHmkGdRaLeRtTgmZS20BxBg1Fkuo+NHB+GQZMCJmsOSXvMGjqxa3/ipY88o/n2XM8L/RVch/zsbBgmywJGgSpl1qiCI77cLP8TT51D7//Qe5P5KCCw9Qp0mijNk0A9g1u3AwSjTjtrWuqCy2+c6N/WKAh6OVZW4yRf6954nnZQOtuSxhhFhd4Gp7JagoMeed7GS+AhcL68sKTghqbQKMoLn6y5Sx+1ltvVuycqXDBMPcpqrl+5fLbvxwEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "cdk-ec2-infinity-applications/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Parameters": {
  "SsmParameterValueawsserviceamiamazonlinuxlatestamzn2amikernel510hvmx8664gp2C96584B6F00A464EAD1953AFF4B05118Parameter": {
   "Type": "AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>",
   "Default": "/aws/service/ami-amazon-linux-latest/amzn2-ami-kernel-5.10-hvm-x86_64-gp2"
  },
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Outputs": {
  "Output": {
   "Value": {
    "Fn::GetAtt": [
     "ALBApplications44D46886",
     "DNSName"
    ]
   }
  },
  "ExportsOutputFnGetAttASGApplicationsInstanceSecurityGroup642FB9F6GroupIdB77C47E8": {
   "Value": {
    "Fn::GetAtt": [
     "ASGApplicationsInstanceSecurityGroup642FB9F6",
     "GroupId"
    ]
   },
   "Export": {
    "Name": "cdk-ec2-infinity-applications:ExportsOutputFnGetAttASGApplicationsInstanceSecurityGroup642FB9F6GroupIdB77C47E8"
   }
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}