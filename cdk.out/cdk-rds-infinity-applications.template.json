{
 "Resources": {
  "RDSAuroraPostgresApplicationsSubnets311AA031": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnets for RDS-AuroraPostgres-Applications database",
    "SubnetIds": [
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateDBApplicationsSubnet1Subnet2E8230169FBC22FD"
     },
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateDBApplicationsSubnet2Subnet128760E8F69437A1"
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-applications/RDS-AuroraPostgres-Applications/Subnets/Default"
   }
  },
  "RDSAuroraPostgresApplicationsSecurityGroup10DE9A14": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "RDS security group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-applications/RDS-AuroraPostgres-Applications/SecurityGroup/Resource"
   }
  },
  "RDSAuroraPostgresApplicationsSecurityGroupfromcdkec2infinityapplicationsASGApplicationsWebInstanceSecurityGroup566A4388IndirectPort347A5853": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "EC2 Autoscaling Group access Aurora",
    "FromPort": {
     "Fn::GetAtt": [
      "RDSAuroraPostgresApplicationsBC5BCB59",
      "Endpoint.Port"
     ]
    },
    "GroupId": {
     "Fn::GetAtt": [
      "RDSAuroraPostgresApplicationsSecurityGroup10DE9A14",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::ImportValue": "cdk-ec2-infinity-applications:ExportsOutputFnGetAttASGApplicationsWebInstanceSecurityGroup94520ECDGroupId56E0900A"
    },
    "ToPort": {
     "Fn::GetAtt": [
      "RDSAuroraPostgresApplicationsBC5BCB59",
      "Endpoint.Port"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-applications/RDS-AuroraPostgres-Applications/SecurityGroup/from cdkec2infinityapplicationsASGApplicationsWebInstanceSecurityGroup566A4388:{IndirectPort}"
   }
  },
  "RDSAuroraPostgresApplicationsSecret0FEC90CD": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"postgres\"}"
    },
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-applications/RDS-AuroraPostgres-Applications/Secret/Resource"
   }
  },
  "RDSAuroraPostgresApplicationsSecretAttachment558333D8": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "RDSAuroraPostgresApplicationsSecret0FEC90CD"
    },
    "TargetId": {
     "Ref": "RDSAuroraPostgresApplicationsBC5BCB59"
    },
    "TargetType": "AWS::RDS::DBCluster"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-applications/RDS-AuroraPostgres-Applications/Secret/Attachment/Resource"
   }
  },
  "RDSAuroraPostgresApplicationsBC5BCB59": {
   "Type": "AWS::RDS::DBCluster",
   "Properties": {
    "CopyTagsToSnapshot": true,
    "DatabaseName": "AuroraPostgresApplications",
    "DBClusterParameterGroupName": "default.aurora-postgresql13",
    "DBSubnetGroupName": {
     "Ref": "RDSAuroraPostgresApplicationsSubnets311AA031"
    },
    "Engine": "aurora-postgresql",
    "EngineVersion": "13.9",
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "RDSAuroraPostgresApplicationsSecret0FEC90CD"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "RDSAuroraPostgresApplicationsSecret0FEC90CD"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "Port": 5432,
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ],
    "VpcSecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "RDSAuroraPostgresApplicationsSecurityGroup10DE9A14",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Snapshot",
   "DeletionPolicy": "Snapshot",
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-applications/RDS-AuroraPostgres-Applications/Resource"
   }
  },
  "RDSAuroraPostgresApplicationswriter27719532": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "DBClusterIdentifier": {
     "Ref": "RDSAuroraPostgresApplicationsBC5BCB59"
    },
    "DBInstanceClass": "db.t3.medium",
    "Engine": "aurora-postgresql",
    "PromotionTier": 0,
    "PubliclyAccessible": false,
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Applications"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-applications/RDS-AuroraPostgres-Applications/writer/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31QQQrCQAx8i/ftigriVSuIN7HeJd3GumqzkmQRKft3q0URD54mmUxmSMZ2NrGjAdwkc9U5u/jStoWCO5uO2rdciW2XoFCCYH6JosimiCWhrjjEq8kPtFx8E29xgY5R+/l78dWsSRTIYTLoxl0Yushe7x+7/8SaakaRZOTlLw0Q1Mi27YXPyB52wDXqXLtbjg2Smo/gd5KS2aKEyA6fou86D1R59YGS2dz1GGjYPWtkp4OTeJ9xJPUN2m2PD6d80tdLAQAA"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-applications/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}