{
 "Resources": {
  "RDSAuroraPostgresAdminSubnets0A265DCE": {
   "Type": "AWS::RDS::DBSubnetGroup",
   "Properties": {
    "DBSubnetGroupDescription": "Subnets for RDS-AuroraPostgres-Admin database",
    "SubnetIds": [
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateDBAdminSubnet1Subnet117EC892B6E6C0B1"
     },
     {
      "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityPrivateDBAdminSubnet2Subnet8751635452E76C29"
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Admin"
     }
    ]
   },
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-admin/RDS-AuroraPostgres-Admin/Subnets/Default"
   }
  },
  "RDSAuroraPostgresAdminSecurityGroupCBD9E351": {
   "Type": "AWS::EC2::SecurityGroup",
   "Properties": {
    "GroupDescription": "RDS security group",
    "SecurityGroupEgress": [
     {
      "CidrIp": "0.0.0.0/0",
      "Description": "Allow all outbound traffic by default",
      "IpProtocol": "-1"
     }
    ],
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Admin"
     }
    ],
    "VpcId": {
     "Fn::ImportValue": "cdk-vpc-infinity:ExportsOutputRefVPCInfinityD7CAF3E67B2297CD"
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-admin/RDS-AuroraPostgres-Admin/SecurityGroup/Resource"
   }
  },
  "RDSAuroraPostgresAdminSecurityGroupfromcdkec2infinityadminASGAdminWebInstanceSecurityGroup4AF707BEIndirectPort1C46C67A": {
   "Type": "AWS::EC2::SecurityGroupIngress",
   "Properties": {
    "IpProtocol": "tcp",
    "Description": "EC2 Autoscaling Group access Aurora",
    "FromPort": {
     "Fn::GetAtt": [
      "RDSAuroraPostgresAdminBF9CE6A7",
      "Endpoint.Port"
     ]
    },
    "GroupId": {
     "Fn::GetAtt": [
      "RDSAuroraPostgresAdminSecurityGroupCBD9E351",
      "GroupId"
     ]
    },
    "SourceSecurityGroupId": {
     "Fn::ImportValue": "cdk-ec2-infinity-admin:ExportsOutputFnGetAttASGAdminWebInstanceSecurityGroup5FCC15EAGroupId1F9E83D7"
    },
    "ToPort": {
     "Fn::GetAtt": [
      "RDSAuroraPostgresAdminBF9CE6A7",
      "Endpoint.Port"
     ]
    }
   },
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-admin/RDS-AuroraPostgres-Admin/SecurityGroup/from cdkec2infinityadminASGAdminWebInstanceSecurityGroup4AF707BE:{IndirectPort}"
   }
  },
  "RDSAuroraPostgresAdminSecretBBA26724": {
   "Type": "AWS::SecretsManager::Secret",
   "Properties": {
    "Description": {
     "Fn::Join": [
      "",
      [
       "Generated by the CDK for stack: ",
       {
        "Ref": "AWS::StackName"
       }
      ]
     ]
    },
    "GenerateSecretString": {
     "ExcludeCharacters": " %+~`#$&*()|[]{}:;<>?!'/@\"\\",
     "GenerateStringKey": "password",
     "PasswordLength": 30,
     "SecretStringTemplate": "{\"username\":\"postgres\"}"
    },
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Admin"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-admin/RDS-AuroraPostgres-Admin/Secret/Resource"
   }
  },
  "RDSAuroraPostgresAdminSecretAttachmentF2F0B53D": {
   "Type": "AWS::SecretsManager::SecretTargetAttachment",
   "Properties": {
    "SecretId": {
     "Ref": "RDSAuroraPostgresAdminSecretBBA26724"
    },
    "TargetId": {
     "Ref": "RDSAuroraPostgresAdminBF9CE6A7"
    },
    "TargetType": "AWS::RDS::DBCluster"
   },
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-admin/RDS-AuroraPostgres-Admin/Secret/Attachment/Resource"
   }
  },
  "RDSAuroraPostgresAdminBF9CE6A7": {
   "Type": "AWS::RDS::DBCluster",
   "Properties": {
    "CopyTagsToSnapshot": true,
    "DatabaseName": "AuroraPostgresAdmin",
    "DBClusterParameterGroupName": "default.aurora-postgresql13",
    "DBSubnetGroupName": {
     "Ref": "RDSAuroraPostgresAdminSubnets0A265DCE"
    },
    "Engine": "aurora-postgresql",
    "EngineVersion": "13.4",
    "MasterUsername": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "RDSAuroraPostgresAdminSecretBBA26724"
       },
       ":SecretString:username::}}"
      ]
     ]
    },
    "MasterUserPassword": {
     "Fn::Join": [
      "",
      [
       "{{resolve:secretsmanager:",
       {
        "Ref": "RDSAuroraPostgresAdminSecretBBA26724"
       },
       ":SecretString:password::}}"
      ]
     ]
    },
    "Port": 5432,
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Admin"
     }
    ],
    "VpcSecurityGroupIds": [
     {
      "Fn::GetAtt": [
       "RDSAuroraPostgresAdminSecurityGroupCBD9E351",
       "GroupId"
      ]
     }
    ]
   },
   "UpdateReplacePolicy": "Snapshot",
   "DeletionPolicy": "Snapshot",
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-admin/RDS-AuroraPostgres-Admin/Resource"
   }
  },
  "RDSAuroraPostgresAdminwriter2498D79E": {
   "Type": "AWS::RDS::DBInstance",
   "Properties": {
    "DBClusterIdentifier": {
     "Ref": "RDSAuroraPostgresAdminBF9CE6A7"
    },
    "DBInstanceClass": "db.t3.medium",
    "Engine": "aurora-postgresql",
    "PromotionTier": 0,
    "PubliclyAccessible": false,
    "Tags": [
     {
      "Key": "Env",
      "Value": "Prod"
     },
     {
      "Key": "Module",
      "Value": "Admin"
     }
    ]
   },
   "UpdateReplacePolicy": "Delete",
   "DeletionPolicy": "Delete",
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-admin/RDS-AuroraPostgres-Admin/writer/Resource"
   }
  },
  "CDKMetadata": {
   "Type": "AWS::CDK::Metadata",
   "Properties": {
    "Analytics": "v2:deflate64:H4sIAAAAAAAA/31QywrCQAz8Fu/bFR8Hr1pBvIn1Luk21lWblSSLSNl/t1oU8eBpkslkhmRsZxM7GsBNMleds4svbVsouLPpqH3Lldh2CQolCOaXKIpsilgS6opDvJr8QMvFN/EWF+gYtZ+/F1/NmkSBHCaDbtyFoYvs9f6x+0+sqWYUSUZe/tIAQY1s2174jOxhB1yjzrW75dggqfkIficpmS1KiOzwKfqu80CVVx8omc1dj4GG3bNGdjo4ifcZR1LfoN32+AAntYL5SwEAAA=="
   },
   "Metadata": {
    "aws:cdk:path": "cdk-rds-infinity-admin/CDKMetadata/Default"
   },
   "Condition": "CDKMetadataAvailable"
  }
 },
 "Conditions": {
  "CDKMetadataAvailable": {
   "Fn::Or": [
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "af-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-northeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ap-southeast-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "ca-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-north-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "cn-northwest-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-central-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-north-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-south-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "eu-west-3"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "me-south-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "sa-east-1"
       ]
      }
     ]
    },
    {
     "Fn::Or": [
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-east-2"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-1"
       ]
      },
      {
       "Fn::Equals": [
        {
         "Ref": "AWS::Region"
        },
        "us-west-2"
       ]
      }
     ]
    }
   ]
  }
 },
 "Parameters": {
  "BootstrapVersion": {
   "Type": "AWS::SSM::Parameter::Value<String>",
   "Default": "/cdk-bootstrap/hnb659fds/version",
   "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]"
  }
 },
 "Rules": {
  "CheckBootstrapVersion": {
   "Assertions": [
    {
     "Assert": {
      "Fn::Not": [
       {
        "Fn::Contains": [
         [
          "1",
          "2",
          "3",
          "4",
          "5"
         ],
         {
          "Ref": "BootstrapVersion"
         }
        ]
       }
      ]
     },
     "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI."
    }
   ]
  }
 }
}